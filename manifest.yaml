apiVersion: v1
kind: Service
metadata:
  name: magento
  labels:
    app: magento
spec:
  ports:
    - port: 80
  selector:
    app: magento
    tier: frontend
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: checkout
  labels:
    app: checkout
spec:
  ports:
    - port: 80
  selector:
    app: checkout
    tier: frontend
  type: LoadBalancer
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: magento
  labels:
    app: magento
spec:
  replicas: 2 
  selector:
    matchLabels:
      app: magento
      tier: frontend
  template:
    metadata:
      labels:
        app: magento
        tier: frontend
    spec:
      containers:
      - image: akril/magento:v1
        name: magento
        ports:
        - containerPort: 80
          name: magento
        imagePullPolicy: Never
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: checkout
  labels:
    app: checkout
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: checkout
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: checkout
        tier: frontend
    spec:
      containers:
      - image: akril/magento-checkout:v1
        name: checkout
        ports:
        - containerPort: 80
          name: checkout
        imagePullPolicy: Never
---
apiVersion: v1
kind: Service
metadata:
  name: magento-db
spec:
  ports:
  - port: 3306
  selector:
    app: magento-db
  clusterIP: None
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: magento-db-pv
  labels:
    type: front
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/db"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: magento-db-pvc
spec:
  storageClassName: ""
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: magento-db
spec:
  selector:
    matchLabels:
      app: magento-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: magento-db
    spec:
      containers:
      - image: mysql:5.6
        name: magento-db
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: magento-db-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: magento-db-persistent-storage
        persistentVolumeClaim:
          claim: magento-db-pvc
